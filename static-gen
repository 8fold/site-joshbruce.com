#!/usr/bin/env php
<?php

require __DIR__.'/vendor/autoload.php';

use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\SingleCommandApplication;

use JoshBruce\Site\StaticGenerator\Generator;

$application = new SingleCommandApplication();

$application->setName('compile')
	->setVersion('0.0.1')
	->addArgument('source', InputArgument::REQUIRED, '/path/to/cotent/source')
	->addArgument('destination', InputArgument::REQUIRED, '/path/to/destination')
	->setCode(function (InputInterface $input, OutputInterface $output) {
		$source = $input->getArgument('source');
		if (! file_exists($source)) {
			$output->writeln('The source directory could not be found.');
			return Command::FAILURE;
		}

		if (! is_dir($source)) {
			$output->writeln('The source should be a directory.');
			return Command::FAILURE;
		}

		$destination = $input->getArgument('destination');
		if (! file_exists($destination)) {
			$output->writeln('The destination directory could not be found.');
			return Command::FAILURE;
		}

		if (! is_dir($destination)) {
			$output->writeln('The destination should be a directory.');
			return Command::FAILURE;
		}

		$start = hrtime(true);

		if (Generator::run($output, $source, $destination)) {
			$end     = hrtime(true);
			$elapsed = $end - $start;
			$ms      = round($elapsed/1e+6);

			$output->writeln(<<<bash

				Completed successfully in {$ms}ms!

				bash
			);
			return Command::SUCCESS;
		}
		return Command::FAILURE;
	})
	->run();
